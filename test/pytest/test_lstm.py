import warnings
import os.path as osp
import numpy as np
from toolchain import jit_file
from stdout_parser import extract_scalar, extract_1d, extract_2d, extract_3d

MLIR_FILES = osp.join(osp.dirname(__file__), "..", "Standalone")


def test_lstm_model():
    # warnings.warn("LSTM model test disabled")
    # return
    dweight = np.array(
        [
            [
                0.0000e00,
                0.0000e00,
                0.0000e00,
                0.0000e00,
                0.0000e00,
                0.0000e00,
                0.0000e00,
                2.6048e-02,
                0.0000e00,
                2.4683e-02,
                0.0000e00,
                7.4462e-02,
                0.0000e00,
                0.0000e00,
            ],
            [
                4.5293e-02,
                2.6449e-02,
                2.0459e-02,
                1.0389e-03,
                2.5506e-03,
                1.2957e-03,
                1.1269e-02,
                1.1259e-02,
                2.2045e-02,
                7.1844e-04,
                2.2365e-02,
                3.2253e-02,
                2.4304e-02,
                1.8542e-02,
            ],
            [
                0.0000e00,
                0.0000e00,
                0.0000e00,
                0.0000e00,
                0.0000e00,
                0.0000e00,
                0.0000e00,
                1.1629e-01,
                0.0000e00,
                8.9053e-02,
                0.0000e00,
                1.2982e-01,
                0.0000e00,
                0.0000e00,
            ],
            [
                2.4827e-02,
                2.6828e-02,
                4.0622e-02,
                1.1076e-02,
                4.6308e-02,
                4.9528e-02,
                7.8642e-02,
                1.2699e-01,
                7.6052e-02,
                4.0121e-03,
                3.9182e-02,
                1.5823e-01,
                1.6023e-01,
                1.5397e-01,
            ],
        ]
    )
    dbias = np.array(
        [
            [
                3.6996e-02,
                3.2030e-02,
                4.4361e-02,
                2.3463e-02,
                3.6573e-02,
                8.0527e-02,
                5.4009e-02,
                2.6048e-02,
                4.4343e-02,
                2.4683e-02,
                2.6025e-02,
                7.4462e-02,
                4.5101e-02,
                6.7633e-02,
            ],
            [
                6.7948e-02,
                3.2893e-02,
                5.7499e-02,
                2.7081e-02,
                2.3489e-02,
                7.3191e-03,
                3.0556e-02,
                2.9006e-02,
                5.2407e-02,
                5.7077e-02,
                4.0472e-02,
                4.4113e-02,
                4.8772e-02,
                4.0392e-02,
            ],
            [
                1.5818e-01,
                2.0412e-01,
                1.4058e-01,
                6.3495e-02,
                5.8194e-02,
                1.0598e-01,
                1.3162e-01,
                1.1629e-01,
                1.3750e-01,
                8.9053e-02,
                1.7813e-01,
                1.2982e-01,
                9.6539e-02,
                9.9578e-02,
            ],
            [
                3.7246e-02,
                3.3365e-02,
                1.1416e-01,
                2.8874e-01,
                4.2647e-01,
                2.7976e-01,
                2.1323e-01,
                3.2717e-01,
                1.8079e-01,
                3.1875e-01,
                7.0903e-02,
                2.1641e-01,
                3.2153e-01,
                3.3540e-01,
            ],
        ]
    )
    dhidden = np.array(
        [
            6.3463e-02,
            3.5488e-02,
            6.4150e-02,
            3.1274e-01,
            3.0431e-01,
            4.4541e-02,
            1.7661e-02,
            2.5539e-01,
            1.9617e-01,
            1.2687e-01,
            2.7875e-02,
            9.1561e-02,
            2.2210e-01,
            3.0332e-01,
        ]
    )
    dcell = np.array(
        [
            2.1507e-01,
            1.1897e-01,
            2.3271e-01,
            3.2343e-01,
            4.7445e-01,
            3.3792e-01,
            2.7919e-01,
            3.9026e-01,
            2.3640e-01,
            4.3813e-01,
            1.7612e-01,
            2.3555e-01,
            3.0942e-01,
            3.1736e-01,
        ]
    )
    dinput = np.array(
        [
            8.6637e-02,
            1.5934e-01,
            5.1677e-02,
            6.6190e-02,
            9.7245e-03,
            3.4641e-02,
            5.6597e-02,
            4.2224e-02,
            5.9924e-02,
            9.0983e-02,
            7.4646e-02,
            9.6997e-02,
            1.0905e-01,
            9.6298e-02,
        ]
    )
    [weightb, biasb, hiddenb, cellb, inputb] = jit_file(
        f"{MLIR_FILES}/lstm/lstm_model.mlir"
    ).split("Unranked")[1:]
    tol = 1e-5
    assert np.abs(extract_2d(weightb) - dweight).max() < tol
    assert np.abs(extract_2d(biasb) - dbias).max() < tol
    assert np.abs(extract_1d(hiddenb) - dhidden).max() < tol
    assert np.abs(extract_1d(cellb) - dcell).max() < tol
    assert np.abs(extract_1d(inputb) - dinput).max() < tol
